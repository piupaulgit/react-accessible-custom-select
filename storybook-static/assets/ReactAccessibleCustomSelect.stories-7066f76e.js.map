{"version":3,"file":"ReactAccessibleCustomSelect.stories-7066f76e.js","sources":["../../src/components/ReactAccessibleCustomSelect/ReactAccessibleCustomSelect.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport \"./ReactAccessibleCustomSelect.scss\";\n\ninterface IOption {\n  label: string;\n  value: string | number;\n}\n\ninterface ReactAccessibleCustomSelectProps {\n  ariaDescribedBy?: string;\n  ariaInvalid?: boolean;\n  ariaRequired?: boolean;\n  buttonLabel?: string;\n  className?: string;\n  defaultValue?: string | number;\n  errorMessage?: string;\n  id: string;\n  isDisabled?: boolean;\n  isOpen?: boolean;\n  label?: string;\n  onBlur: (e: any) => void;\n  onChange: (e: { id: string; value: IOption }) => void;\n  onClose: (e: any) => void;\n  onFocus: (e: any) => void;\n  onOpen: (e: any) => void;\n  options: IOption[];\n  placeholder?: string;\n}\n\ninterface IDropdownDetails {\n  activeOptionIndex: number;\n  buttonLabel?: string;\n  isOpen: boolean;\n  options: IOption[];\n  selectedOption: IOption;\n}\n\nexport enum KEYS {\n  ARROWDOWN = \"ArrowDown\",\n  ARROWUP = \"ArrowUp\",\n  END = \"End\",\n  ENTER = \"Enter\",\n  ESCAPE = \"Escape\",\n  HOME = \"Home\",\n  PAGEDOWN = \"PageDown\",\n  PAGEUP = \"PageUp\",\n  SPACEBAR = \"Spacebar\",\n  TAB = \"Tab\",\n}\n\nconst ReactAccessibleCustomSelect: React.FC<\n  ReactAccessibleCustomSelectProps\n> = (props: ReactAccessibleCustomSelectProps) => {\n  const [dropdownDetails, setDropdownDetails] = useState<IDropdownDetails>({\n    activeOptionIndex: -1,\n    buttonLabel: props.buttonLabel,\n    isOpen: (props.isOpen && props.isOpen) || false,\n    options:\n      (props.placeholder &&\n        [{ label: props.placeholder, value: \"\" }].concat(\n          props.options as []\n        )) ||\n      props.options,\n    selectedOption:\n      (props.defaultValue &&\n        props.options.filter(\n          (item: IOption) => item.value === props.defaultValue\n        )[0]) ||\n      ({ label: props.placeholder, value: \"\" } as IOption),\n  });\n\n  useEffect(() => {\n    const selectedOption = document.querySelector(\n      `#${props.id}-react-accessible-custom-select ul li[tabIndex=\"0\"]`\n    ) as HTMLElement;\n    selectedOption && selectedOption.focus();\n  }, [dropdownDetails.isOpen, dropdownDetails.activeOptionIndex]);\n\n  useEffect(() => {\n    props.onChange &&\n      props.onChange({ id: props.id, value: dropdownDetails.selectedOption });\n  }, [dropdownDetails.selectedOption]);\n\n  const onButtonKeyDown = (e: any) => {\n    const { key: actionKey } = e;\n\n    (actionKey === KEYS.ARROWUP ||\n      actionKey === KEYS.ARROWDOWN ||\n      actionKey === KEYS.ENTER ||\n      actionKey === KEYS.SPACEBAR) &&\n      (e.preventDefault(), toggleDropdown());\n\n    actionKey === KEYS.TAB && toggleDropdown();\n  };\n\n  const onOptionKeyDown = (e: any) => {\n    const { key: actionKey } = e;\n    e.preventDefault();\n\n    (actionKey === KEYS.ENTER || actionKey === KEYS.SPACEBAR) &&\n      toggleDropdown();\n\n    actionKey === KEYS.ARROWUP &&\n      setDropdownDetails((prev) => ({\n        ...dropdownDetails,\n        activeOptionIndex:\n          prev.activeOptionIndex > 0\n            ? prev.activeOptionIndex - 1\n            : dropdownDetails.options.length - 1,\n      }));\n\n    actionKey === KEYS.ARROWDOWN &&\n      setDropdownDetails((prev) => ({\n        ...dropdownDetails,\n        activeOptionIndex:\n          prev.activeOptionIndex < dropdownDetails.options.length - 1\n            ? prev.activeOptionIndex + 1\n            : 0,\n      }));\n\n    (actionKey === KEYS.HOME || actionKey === KEYS.PAGEUP) &&\n      setDropdownDetails({ ...dropdownDetails, activeOptionIndex: 0 });\n\n    (actionKey === KEYS.END || actionKey === KEYS.PAGEDOWN) &&\n      setDropdownDetails({\n        ...dropdownDetails,\n        activeOptionIndex: dropdownDetails.options.length - 1,\n      });\n\n    actionKey === KEYS.ENTER && getSelectedOption(e);\n\n    (actionKey === KEYS.ESCAPE || actionKey === KEYS.TAB) &&\n      (toggleDropdown(), document.getElementById(props.id)?.focus());\n  };\n\n  const onOptionBlur = (e: any) => {\n    (!e.relatedTarget ||\n      !e.relatedTarget.closest(\n        `#${props.id}-react-accessible-custom-select`\n      )) &&\n      toggleDropdown();\n  };\n\n  const toggleDropdown = (e?: any) => {\n    !dropdownDetails.isOpen ? props.onOpen(e) : props.onClose(e);\n\n    setDropdownDetails((prev) => ({\n      ...dropdownDetails,\n      activeOptionIndex:\n        (!prev.isOpen &&\n          dropdownDetails.options.findIndex(\n            (option: IOption) =>\n              option.value === dropdownDetails.selectedOption.value\n          )) ||\n        dropdownDetails.activeOptionIndex,\n      isOpen: !prev.isOpen,\n    }));\n  };\n\n  const getSelectedOption = (e: any) => {\n    const selectedOption: IOption = dropdownDetails.options.find(\n      (option) => option.value.toString() === e.target.id\n    ) as IOption;\n\n    setDropdownDetails({\n      ...dropdownDetails,\n      isOpen: false,\n      selectedOption: selectedOption,\n    });\n\n    props.onClose(e);\n\n    document.getElementById(props.id)?.focus();\n  };\n\n  const onFocus = (e: any) => {\n    props.onFocus && props.onFocus(e);\n  };\n\n  const renderDropdownOptions = () => {\n    return dropdownDetails.options.map((option: IOption, indx: number) => {\n      return (\n        <li\n          aria-label={option.label}\n          aria-selected={option.label === dropdownDetails.selectedOption.label}\n          role=\"option\"\n          tabIndex={indx === dropdownDetails.activeOptionIndex ? 0 : -1}\n          className={`custom-select-dropdown-list-item ${\n            dropdownDetails.selectedOption.label === option.label && \"selected\"\n          }`}\n          key={indx}\n          id={`${option.value}`}\n          value={option.value}\n        >\n          {option.label}\n        </li>\n      );\n    });\n  };\n\n  return (\n    <div\n      className={`react-accessible-custom-select ${\n        (dropdownDetails.isOpen && \"expanded\") || \"collapsed\"\n      } ${(props.className && props.className) || \"\"} ${\n        (props.ariaInvalid && \"error\") || \"\"\n      }`}\n      id={`${props.id}-react-accessible-custom-select`}\n    >\n      {props?.label && (\n        <label className=\"custom-select-label\" htmlFor={props.id}>\n          {props?.label}\n          {props.ariaRequired && <span className=\"required-sybmol\">*</span>}\n        </label>\n      )}\n      <div className=\"custom-select\">\n        <button\n          aria-describedby={props.ariaDescribedBy}\n          aria-expanded={dropdownDetails.isOpen}\n          aria-invalid={true}\n          aria-owns={`customSelectList_${props.id}`}\n          aria-required={true}\n          className={`custom-select-button ${\n            props.isDisabled ? \"disabled\" : \"\"\n          }`}\n          disabled={props.isDisabled}\n          id={props.id}\n          onClick={toggleDropdown}\n          onFocus={onFocus}\n          onKeyDown={onButtonKeyDown}\n          role=\"combobox\"\n          type=\"button\"\n        >\n          {dropdownDetails.selectedOption.label}\n        </button>\n        {dropdownDetails.isOpen && (\n          <ul\n            className=\"custom-select-dropdown-list\"\n            id={`customSelectList_${props.id}`}\n            onBlur={onOptionBlur}\n            onClick={getSelectedOption}\n            onKeyDown={onOptionKeyDown}\n            role=\"listbox\"\n            tabIndex={-1}\n          >\n            {renderDropdownOptions()}\n          </ul>\n        )}\n      </div>\n      {props.ariaInvalid && props.errorMessage && (\n        <p className=\"error-message\">{props.errorMessage}</p>\n      )}\n    </div>\n  );\n};\n\nexport default ReactAccessibleCustomSelect;\n"],"names":["ReactAccessibleCustomSelect","props","dropdownDetails","setDropdownDetails","useState","item","useEffect","selectedOption","onButtonKeyDown","e","actionKey","toggleDropdown","onOptionKeyDown","prev","getSelectedOption","_a","onOptionBlur","option","onFocus","renderDropdownOptions","indx","jsx","jsxs"],"mappings":"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"}